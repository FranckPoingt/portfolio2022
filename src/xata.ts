// Generated by Xata Codegen 0.21.0. Please do not edit.
import { buildClient } from "@xata.io/client";
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord,
} from "@xata.io/client";

const tables = [
  {
    name: "experience",
    columns: [
      { name: "company_name", type: "string" },
      { name: "missions", type: "multiple" },
      { name: "start", type: "string" },
      { name: "end", type: "string" },
      { name: "logo", type: "string" },
      { name: "url", type: "string" },
      { name: "stack", type: "multiple" },
    ],
  },
  {
    name: "projects",
    columns: [
      { name: "name", type: "string" },
      { name: "url", type: "string" },
      { name: "description", type: "text" },
      { name: "logo_url", type: "string" },
      { name: "stack", type: "multiple" },
      { name: "display_order", type: "int", unique: true },
    ],
  },
  {
    name: "socials",
    columns: [
      { name: "social_name", type: "string" },
      { name: "social_link", type: "string" },
    ],
  },
  {
    name: "education",
    columns: [
      { name: "title", type: "string" },
      { name: "dates", type: "string" },
      { name: "school", type: "string" },
      { name: "description", type: "multiple" },
    ],
  },
  { name: "stack", columns: [{ name: "technology_name", type: "string" }] },
  {
    name: "messages",
    columns: [
      { name: "name", type: "string" },
      { name: "company", type: "string" },
      { name: "email", type: "email" },
      { name: "message", type: "text" },
    ],
  },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type Experience = InferredTypes["experience"];
export type ExperienceRecord = Experience & XataRecord;

export type Projects = InferredTypes["projects"];
export type ProjectsRecord = Projects & XataRecord;

export type Socials = InferredTypes["socials"];
export type SocialsRecord = Socials & XataRecord;

export type Education = InferredTypes["education"];
export type EducationRecord = Education & XataRecord;

export type Stack = InferredTypes["stack"];
export type StackRecord = Stack & XataRecord;

export type Messages = InferredTypes["messages"];
export type MessagesRecord = Messages & XataRecord;

export type DatabaseSchema = {
  experience: ExperienceRecord;
  projects: ProjectsRecord;
  socials: SocialsRecord;
  education: EducationRecord;
  stack: StackRecord;
  messages: MessagesRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL:
    "https://Franck-P-s-workspace-vpcbi7.us-west-2.xata.sh/db/portfolio",
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};
